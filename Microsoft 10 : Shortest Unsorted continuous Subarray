Question Link : https://leetcode.com/problems/shortest-unsorted-continuous-subarray/description/

Solution:

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        vector<int> ans = nums;
        sort(ans.begin(),ans.end());
        int i=0,j=nums.size()-1,start=-1,end=-1;
        while(i<j){
            if(nums[i]!=ans[i] && start==-1) start = i;
            if(nums[j]!=ans[j] && end==-1) end = j;
            if(start==-1) i++;
            if(end==-1) j--;
            if(start!=-1 && end!=-1) break;
        }
        if(start==end) return 0;
        return (end - start +1);
    }
};
