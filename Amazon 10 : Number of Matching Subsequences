Question Link :https://leetcode.com/problems/number-of-matching-subsequences/

Solution : 

class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        unordered_map<char,vector<int>> m;
        for(int i=0;i<s.size();i++){
            m[s[i]].push_back(i);
        }

        int ans = 0;
        for(string str : words){
           int currIdx = -1;
           for(int j=0;j<str.size();j++){
               auto it = upper_bound(m[str[j]].begin(),m[str[j]].end(),currIdx);
               if(it == m[str[j]].end()) break;
               currIdx = *it;
               if(j == str.size()-1) ans++;
           }
        }
        return ans;
    }
};
