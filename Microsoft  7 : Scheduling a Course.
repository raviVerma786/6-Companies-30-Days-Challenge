Question Link : https://leetcode.com/problems/course-schedule/

Solution : 

class Solution {
public:
    bool canFinish(int N, vector<vector<int>>& prerequisites) {
        vector<int> adj[N];
	    for(auto p : prerequisites){
	        adj[p[1]].push_back(p[0]);
	    }
	    
	    queue<int> q;
	    vector<int> indegree(N,0);
	    for(int i=0;i<N;i++){
	        for(auto p : adj[i]){
	            indegree[p]++;
	        }
	    }
	    
	    for(int i=0;i<N;i++){
	        if(indegree[i]==0){
	            q.push(i);
	        }
	    }
	    
	    int cnt = 0;
	    while(!q.empty()){
	        int node = q.front();
	        q.pop();
	        
	        cnt++;
	        for(int i : adj[node]){
	            indegree[i]--;
	            if(indegree[i] == 0)
	                q.push(i);
	        }
	    }
	    
	    return cnt == N;
    }
};
