Question Link :https://leetcode.com/problems/maximum-sum-of-an-hourglass/description/

Solution :

class Solution {
public:
    int maxSum(vector<vector<int>>& grid) {
        int ans = 0,m=grid.size(),n=grid[0].size();
        for(int i=0;i<=(m-3);i++){
            for(int j=1;j<(n-1);j++){
                int row = i,col = j;
                int sum = (grid[row][col-1] + grid[row][col] + grid[row][col+1]) + 
                                (grid[row + 1][col]) + 
                (grid[row + 2][col-1] + grid[row + 2][col] + grid[row + 2][col+1]);

                ans = max(ans,sum);
            }
        }

        return ans;
    }
};
