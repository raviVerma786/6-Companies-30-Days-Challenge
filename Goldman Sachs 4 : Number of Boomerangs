Question Link : https://leetcode.com/problems/number-of-boomerangs/description/


Solution : 

class Solution {
public:
    int pointDistance(vector<int>&p,vector<int>&q){
        return (p[0] - q[0])*(p[0] - q[0]) + (p[1] - q[1])*(p[1] - q[1]);
    }
    
    int numberOfBoomerangs(vector<vector<int>>& points) {
        int cnt = 0;

        for(int i=0;i<points.size();i++){
            unordered_map<int,int> disCnt;
            for(int j=0;j<points.size();j++){
                int dis = pointDistance(points[i],points[j]);
                disCnt[dis]++;
            }

            for(pair<int,int> p : disCnt){
                int n = p.second;
                cnt += (n * (n-1));
            }
        }

        return cnt;
    }
};
