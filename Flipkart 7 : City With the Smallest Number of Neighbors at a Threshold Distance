Question Link :https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/description/

Solution :

class Solution {
private:
    void floyd_Warshall(vector<vector<long long>>&dis,int n){
        for(int via=0;via<n;via++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    dis[i][j] = min(dis[i][j],dis[i][via] + dis[via][j]);
                }
            }
        }
    }
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<long long>> dis(n,vector<long long>(n,1e17));
        // a -> a at 0 distance
        for(int i=0;i<n;i++){
            dis[i][i] = 0;
        }

        for(vector<int>&v : edges){
            dis[v[0]][v[1]] = v[2];
            dis[v[1]][v[0]] = v[2];
        }

        floyd_Warshall(dis,n);
        //finding ans
        int ans = INT_MAX,ansNode = 0;
        for(int i=0;i<n;i++){
            int cnt = 0;
            for(int j=0;j<n;j++){
                if(i!=j && dis[i][j] <= distanceThreshold) cnt++;
            }
            if(cnt <= ans){
                ans = cnt;
                ansNode = i; //in case of equal ansNode must taken max but i is always increasing so it will automatically take max node in case of equal cnt
            }
        }

        return ansNode;
    }
};
