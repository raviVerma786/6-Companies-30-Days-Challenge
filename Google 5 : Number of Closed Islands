Question Link : https://leetcode.com/problems/number-of-closed-islands/description/

Solution : 

class Solution {
    // https://www.youtube.com/watch?v=JJ5FxoLckMw&ab_channel=HelloWorld
private:
    void dfs(vector<vector<int>>& grid,int i,int j){
        if(i<0 || j<0 || i>=grid.size() || j>=grid[0].size() || grid[i][j] == 1) return;

        grid[i][j] = 1;
        dfs(grid,i+1,j);
        dfs(grid,i-1,j);
        dfs(grid,i,j+1);
        dfs(grid,i,j-1);
    }
public:
    int closedIsland(vector<vector<int>>& grid) {
        //call to manage border 0s because all 0s connected with border zeros can't be closed island
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j] == 0 && (i==0 || j==0 || i==grid.size()-1 || j==grid[0].size()-1)){
                    dfs(grid,i,j);
                }
            }
        }

        //call to find ans
        int ans = 0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j] == 0){
                    dfs(grid,i,j);
                    ans++;
                }
            }
        }

        return ans;
    }
};
